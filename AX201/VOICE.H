#define NO_VOICE      0 /* 음성 출력을 하지 않는다. */
#define SOUNDBLASTER  2 /* 사운드 블래스터 */
#define PC_SPEAKER    1 /* 피시 스피커 */
#define COVOX         3 /* 코복스 */

#define VOICE_IDLE 0    /* 음성 출력중이 아니다. */
#define VOICE_BUSY 1    /* 음성 출력중이다. */

#define DIRECT_8BIT_DAC 0x10  /* 사블 직접 8 비트 DAC */
#define DMA_8BIT_DAC    0x14  /* DMA를 이용한 8 비트 DAC */
#define HALT_DMA        0xd0  /* DMA 전송 중지 */
#define FREQ_DIVISER    0x40  /* 샘플링 주파수 설정 */
#define SBL_SPEAKER_ON  0xD1  /* 사블 스피커를 켠다. */
#define SBL_SPEAKER_OFF 0xD3  /* 사블 스피커를 끈다. */
#define SBL_RESET       0x6   /* 사블 리셑 */
#define SBL_RESET_CMD   0x1
#define SBL_DATA_AVAIL  0x0e  /* 사블 데이타 분석중 */
#define SBL_READ_DATA   0xa   /* 사블 데이타 읽기 */
#define SBL_READ_STATUS 0xc   /* 사블 상태 읽기 */
#define SBL_WRITE_DATA  0xc   /* 사블 데이타 쓰기 */

#define SBLPRO_MIXER_A  0x4   /* 사블 프로 믹서 어드레스 */
#define SBLPRO_MIXER_D  0x5   /* 사블 프로 믹서 데이타 어드레스 */
#define SBLPRO_VOICE_VOLUME   0x04 /* 사블 프로 보이스 볼륨 */
#define SBLPRO_MASTER_VOLUME  0x22
#define SBLPRO_LINE_VOLUME    0x2e
#define SBLPRO_FM_VOLUME      0x26
#define SBLPRO_CD_VOLUME      0x28

#define setSBLProMixer(A,R,L) \
  { outp(SBLBaseIO+SBLPRO_MIXER_A,(A)) ; \
	outp(SBLBaseIO+SBLPRO_MIXER_D,((R)<<4)|(L)) ; }

short int SBLBaseIO=0x220;   /* default sound blaster Base IO Address */
short int SBLIRQ=7;        /* default sound blaster hardware interrupt */
short int SBLDMAChannel=0x1; /* default sound blaster DMA channel */
short unsigned int SampleRate=8000;
short int VoiceFlag=VOICE_IDLE; /* 음성 출력 상테 변수 */
short int VoiceHardWare=NO_VOICE;  /* 음성 출력 하드웨어 */

unsigned short int VOC_GetDMACount(void);
int VOC_Play(char *filename);
int VOC_Init(void);
void VOC_Close(void);

int SBL_Command(unsigned char);
int SBL_Reset(short int);
void VOC_SetSampleRate(unsigned short int);
int SBL_AutoDetect(void);
void SBL_Speaker(unsigned char);
int SBL_sendcommand(unsigned char);
#pragma aux SBL_sendcommand= \
 " mov dx,SBLBaseIO "\
 " add dx,0xc "\
 " mov cx,0x2000 "\
 " waitLoop: "\
 " in  al,dx "\
 " test al,0x80 "\
 " jz  writeCommand "\
 " loop waitLoop "\
 " mov eax,-1 "\
 " jmp end "\
 " writeCommand: "\
 " mov al,bl "\
 " out dx,al "\
 " mov eax,1 "\
 " end: "\
 parm [bl] \
 value [eax] \
 modify [eax ebx ecx edx] ;

void waitmSec(unsigned short int);
void VOC_SetVolume(unsigned short int vol);
unsigned int VOC_GetVolume(void);
